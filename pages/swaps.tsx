import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import React, { useEffect } from 'react'
import { ChainId, ETH, WETHContract, UniswapDappSharedLogicContext } from 'uniswap-dapp-integration-shared'
import UniswapReact from 'uniswap-react'
import Web3 from 'web3'
import styles from '../styles/Home.module.css'

const Home: NextPage = () => {
  const [uniswapDappSharedLogicContext, setUniswapDappSharedLogicContext] = React.useState<
    undefined | UniswapDappSharedLogicContext
  >(undefined)
  const [metamaskInstalled, setMetamaskInstalled] = React.useState<undefined | boolean>(false)

  const [loading, setLoading] = React.useState<boolean>(true)

  useEffect(() => {
    ; (async () => {
      async function getMetaMaskAccount(): Promise<string[]> {
        try {
          const accounts = await (window as any).ethereum.request({
            method: 'eth_requestAccounts',
          })
          return accounts
        } catch (error) {
          // keep trying if they reject the request!
          return getMetaMaskAccount()
        }
      }

      const ethereum = (window as any).ethereum
      if (!ethereum) {
        setMetamaskInstalled(false)
        setLoading(false)
        return
      }

      setMetamaskInstalled(true)

      // MetaMask
      const accounts = await getMetaMaskAccount()
      // basic config!
      const uniswapDappSharedLogicContext: UniswapDappSharedLogicContext = {
        supportedNetworkTokens: [
          {
            chainId: ChainId.MAINNET,
            defaultInputToken: ETH.MAINNET().contractAddress,
            defaultOutputToken: '0xf1B99e3E573A1a9C5E6B2Ce818b617F0E664E86B',
            supportedTokens: [
              { contractAddress: ETH.MAINNET().contractAddress },
              { contractAddress: '0xf1B99e3E573A1a9C5E6B2Ce818b617F0E664E86B' },
            ],
          },
        ],
        ethereumAddress: accounts[0],
        ethereumProvider: ethereum,
      }

      setUniswapDappSharedLogicContext(uniswapDappSharedLogicContext)
      setLoading(false)
    })()
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Squeeth Portal</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <a href="https://nextjs.org">Squeeth portal</a>
        </h1>
        {!loading && (
          <div className={styles.uniswapContainer}>
            {uniswapDappSharedLogicContext !== undefined && metamaskInstalled && (
              <UniswapReact uniswapDappSharedLogicContext={uniswapDappSharedLogicContext} />
            )}
            {!metamaskInstalled && <p>This showcase only supports MetaMask please install it.</p>}
          </div>
        )}
      </main>
    </div>
  )
}

export default Home
